{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/CountryList.js"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\n\r\nexport default function CountryList() {\r\n    const [countries, setCountries] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3000/api/available-countries')\r\n                console.log(response.data)\r\n                setCountries(response.data)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.error('Error fetching countries:', error)\r\n                setError('Failed to load countries. Please check your connection and try again.')\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchCountries()\r\n    }, [])\r\n\r\n    if (isLoading) return <div className=\"text-center\" aria-live=\"polite\">Loading countries...</div>\r\n    if (error) return <div className=\"text-center text-red-500\" aria-live=\"assertive\">{error}</div>\r\n\r\n    return (\r\n        <ul className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" role=\"list\">\r\n            {countries.map(country => (\r\n                <li key={country.countryCode} className=\"border p-4 rounded-lg hover:bg-gray-100\">\r\n                    <Link href={`/country/${country.countryCode}`} className=\"text-blue-600 hover:underline\">\r\n                        {country.name}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACpB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,MAAM;wDAAiB;oBACnB,IAAI;wBACA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;wBACjC,QAAQ,GAAG,CAAC,SAAS,IAAI;wBACzB,aAAa,SAAS,IAAI;wBAC1B,aAAa;oBACjB,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,6BAA6B;wBAC3C,SAAS;wBACT,aAAa;oBACjB;gBACJ;;YAEA;QACJ;gCAAG,EAAE;IAEL,IAAI,WAAW,qBAAO,6LAAC;QAAI,WAAU;QAAc,aAAU;kBAAS;;;;;;IACtE,IAAI,OAAO,qBAAO,6LAAC;QAAI,WAAU;QAA2B,aAAU;kBAAa;;;;;;IAEnF,qBACI,6LAAC;QAAG,WAAU;QAAuD,MAAK;kBACrE,UAAU,GAAG,CAAC,CAAA,wBACX,6LAAC;gBAA6B,WAAU;0BACpC,cAAA,6LAAC,+HAAA,CAAA,UAAI;oBAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,WAAW,EAAE;oBAAE,WAAU;8BACpD,QAAQ,IAAI;;;;;;eAFZ,QAAQ,WAAW;;;;;;;;;;AAQ5C;GApCwB;KAAA"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}