{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/PopulationChart.js"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function PopulationChart({ data }) {\r\n  const [maxPopulation, setMaxPopulation] = useState(0)\r\n  const [chartData, setChartData] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!data || typeof data !== 'object') {\r\n      console.error('Invalid data provided to PopulationChart')\r\n      return\r\n    }\r\n\r\n    let populationData = []\r\n\r\n    if (Array.isArray(data)) {\r\n      populationData = data\r\n    } else if (data.populationCounts && Array.isArray(data.populationCounts)) {\r\n      populationData = data.populationCounts\r\n    } else {\r\n      console.error('Unexpected data structure in PopulationChart')\r\n      return\r\n    }\r\n\r\n    const max = Math.max(...populationData.map(d => d.count || d.value || 0))\r\n    setMaxPopulation(max)\r\n    setChartData(populationData)\r\n  }, [data])\r\n\r\n  if (!chartData.length) {\r\n    return <div>No population data available</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-2xl mx-auto\">\r\n      <h3 className=\"text-lg font-semibold mb-2\">Population Over Time</h3>\r\n      <div className=\"flex flex-col space-y-2\">\r\n        {chartData.map((item) => (\r\n          <div key={item.year} className=\"flex items-center\">\r\n            <span className=\"w-16 text-right mr-2\">{item.year}</span>\r\n            <div className=\"flex-grow bg-gray-200 rounded-full h-4 overflow-hidden\">\r\n              <div\r\n                className=\"bg-blue-500 h-full rounded-full\"\r\n                style={{ width: `${((item.count || item.value || 0) / maxPopulation) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span className=\"w-24 text-right ml-2\">\r\n              {(item.count || item.value || 0).toLocaleString()}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,gBAAgB,EAAE,IAAI,EAAE;IAC9C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;YACrC,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,IAAI,iBAAiB,EAAE;QAEvB,IAAI,MAAM,OAAO,CAAC,OAAO;YACvB,iBAAiB;QACnB,OAAO,IAAI,KAAK,gBAAgB,IAAI,MAAM,OAAO,CAAC,KAAK,gBAAgB,GAAG;YACxE,iBAAiB,KAAK,gBAAgB;QACxC,OAAO;YACL,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,MAAM,MAAM,KAAK,GAAG,IAAI,eAAe,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI;QACtE,iBAAiB;QACjB,aAAa;IACf,GAAG;QAAC;KAAK;IAET,IAAI,CAAC,UAAU,MAAM,EAAE;QACrB,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,8OAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,qBACd,8OAAC;wBAAoB,WAAU;;0CAC7B,8OAAC;gCAAK,WAAU;0CAAwB,KAAK,IAAI;;;;;;0CACjD,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,GAAG,AAAC,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI,gBAAiB,IAAI,CAAC,CAAC;oCAAC;;;;;;;;;;;0CAGlF,8OAAC;gCAAK,WAAU;0CACb,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,EAAE,cAAc;;;;;;;uBATzC,KAAK,IAAI;;;;;;;;;;;;;;;;AAgB7B"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/CountryInfo.js"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport PopulationChart from './PopulationChart'\r\n\r\nexport default function CountryInfo({ countryCode }) {\r\n    const [countryData, setCountryData] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchCountryData = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/api/country-info/${countryCode}`)\r\n                console.log(response.data)\r\n                setCountryData(response.data)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.error('Error fetching country data:', error)\r\n                setError('Failed to load country information. Please check your connection and try again.')\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchCountryData()\r\n    }, [countryCode])\r\n\r\n    if (isLoading) return <div className=\"text-center\" aria-live=\"polite\">Loading country information...</div>\r\n    if (error) return <div className=\"text-center text-red-500\" aria-live=\"assertive\">{error}</div>\r\n    if (!countryData) return null\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-center space-x-4\">\r\n                <h1 className=\"text-3xl font-bold\">{countryData.officialName}</h1>\r\n                <Image src={countryData.flag} alt={`Flag of ${countryData.Ukraine}`} width={64} height={40} />\r\n            </div>\r\n\r\n            <div>\r\n                <h2 className=\"text-2xl font-semibold mb-2\">Border Countries</h2>\r\n                <ul className=\"flex flex-wrap gap-2\" role=\"list\">\r\n                    {countryData.borders.map(code => (\r\n                        <li key={code.countryCode} className=\"bg-blue-100 px-3 py-1 rounded\">\r\n                            <Link href={`/country/${code.countryCode}`} className=\"text-blue-600 hover:underline\">\r\n                                {code.officialName}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <PopulationChart data={countryData.population} />\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AADA;AALA;;;;;;;AAQe,SAAS,YAAY,EAAE,WAAW,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,mBAAmB;YACrB,IAAI;gBACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,uCAAuC,EAAE,aAAa;gBACxF,QAAQ,GAAG,CAAC,SAAS,IAAI;gBACzB,eAAe,SAAS,IAAI;gBAC5B,aAAa;YACjB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,SAAS;gBACT,aAAa;YACjB;QACJ;QAEA;IACJ,GAAG;QAAC;KAAY;IAEhB,IAAI,WAAW,qBAAO,8OAAC;QAAI,WAAU;QAAc,aAAU;kBAAS;;;;;;IACtE,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;QAA2B,aAAU;kBAAa;;;;;;IACnF,IAAI,CAAC,aAAa,OAAO;IAEzB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAAsB,YAAY,YAAY;;;;;;kCAC5D,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK,YAAY,IAAI;wBAAE,KAAK,CAAC,QAAQ,EAAE,YAAY,OAAO,EAAE;wBAAE,OAAO;wBAAI,QAAQ;;;;;;;;;;;;0BAG5F,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAG,WAAU;wBAAuB,MAAK;kCACrC,YAAY,OAAO,CAAC,GAAG,CAAC,CAAA,qBACrB,8OAAC;gCAA0B,WAAU;0CACjC,cAAA,8OAAC,4HAAA,CAAA,UAAI;oCAAC,MAAM,CAAC,SAAS,EAAE,KAAK,WAAW,EAAE;oCAAE,WAAU;8CACjD,KAAK,YAAY;;;;;;+BAFjB,KAAK,WAAW;;;;;;;;;;;;;;;;0BASrC,8OAAC,oIAAA,CAAA,UAAe;gBAAC,MAAM,YAAY,UAAU;;;;;;;;;;;;AAGzD"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/Loading.js"],"sourcesContent":["export default function Loading() {\r\n    return <div className=\"text-center\">Loading...</div>\r\n}"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBAAO,8OAAC;QAAI,WAAU;kBAAc;;;;;;AACxC"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/app/country/%5Bcode%5D/page.js"],"sourcesContent":["\"use client\"\r\nimport { Suspense } from 'react'\r\nimport CountryInfo from '@/components/CountryInfo'\r\nimport Loading from '@/components/Loading'\r\nimport { useParams } from 'next/navigation'\r\n\r\nexport default function CountryPage() {\r\n    const { code } = useParams()\r\n    return (\r\n        <main className=\"container mx-auto p-4\">\r\n            <Suspense fallback={<Loading />}>\r\n                <CountryInfo countryCode={code} />\r\n            </Suspense>\r\n        </main>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACpB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACzB,qBACI,8OAAC;QAAK,WAAU;kBACZ,cAAA,8OAAC,qMAAA,CAAA,WAAQ;YAAC,wBAAU,8OAAC,4HAAA,CAAA,UAAO;;;;;sBACxB,cAAA,8OAAC,gIAAA,CAAA,UAAW;gBAAC,aAAa;;;;;;;;;;;;;;;;AAI1C"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}