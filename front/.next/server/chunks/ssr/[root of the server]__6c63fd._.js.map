{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/PopulationChart.js"],"sourcesContent":["'use client'\r\n\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\r\n\r\nexport default function PopulationChart({ data }) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <LineChart\r\n        data={data}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis \r\n          dataKey=\"year\" \r\n          label={{ value: 'Year', position: 'insideBottomRight', offset: -10 }}\r\n        />\r\n        <YAxis \r\n          label={{ value: 'Population', angle: -90, position: 'insideLeft' }}\r\n        />\r\n        <Tooltip />\r\n        <Line type=\"monotone\" dataKey=\"count\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAIe,SAAS,gBAAgB,EAAE,IAAI,EAAE;IAC9C,qBACE,8OAAC;QAAoB,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC;YACC,MAAM;YACN,QAAQ;gBAAE,KAAK;gBAAG,OAAO;gBAAI,MAAM;gBAAI,QAAQ;YAAE;;8BAEjD,8OAAC;oBAAc,iBAAgB;;;;;;8BAC/B,8OAAC;oBACC,SAAQ;oBACR,OAAO;wBAAE,OAAO;wBAAQ,UAAU;wBAAqB,QAAQ,CAAC;oBAAG;;;;;;8BAErE,8OAAC;oBACC,OAAO;wBAAE,OAAO;wBAAc,OAAO,CAAC;wBAAI,UAAU;oBAAa;;;;;;8BAEnE,8OAAC;;;;;8BACD,8OAAC;oBAAK,MAAK;oBAAW,SAAQ;oBAAQ,QAAO;oBAAU,WAAW;wBAAE,GAAG;oBAAE;;;;;;;;;;;;;;;;;AAIjF"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/leone/Desktop/git/Country-info/front/src/components/CountryInfo.js"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport PopulationChart from './PopulationChart'\r\n\r\nexport default function CountryInfo({ countryCode }) {\r\n    const [countryData, setCountryData] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchCountryData = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/api/country-info/${countryCode}`)\r\n                setCountryData(response.data)\r\n                setIsLoading(false)\r\n            } catch (error) {\r\n                console.error('Error fetching country data:', error)\r\n                setError('Failed to load country information. Please check your connection and try again.')\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchCountryData()\r\n    }, [countryCode])\r\n\r\n    if (isLoading) return <div className=\"text-center\" aria-live=\"polite\">Loading country information...</div>\r\n    if (error) return <div className=\"text-center text-red-500\" aria-live=\"assertive\">{error}</div>\r\n    if (!countryData) return null\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-center space-x-4\">\r\n                <h1 className=\"text-3xl font-bold\">{countryData.name}</h1>\r\n                <Image src={countryData.flag} alt={`Flag of ${countryData.name}`} width={64} height={40} />\r\n            </div>\r\n\r\n            <div>\r\n                <h2 className=\"text-2xl font-semibold mb-2\">Border Countries</h2>\r\n                <ul className=\"flex flex-wrap gap-2\" role=\"list\">\r\n                    {countryData.borderCountries.map(code => (\r\n                        <li key={code} className=\"bg-blue-100 px-3 py-1 rounded\">\r\n                            <Link href={`/country/${code}`} className=\"text-blue-600 hover:underline\">\r\n                                {code}\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div>\r\n                <h2 className=\"text-2xl font-semibold mb-2\">Population Over Time</h2>\r\n                <PopulationChart data={countryData.population} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AADA;AALA;;;;;;;AAQe,SAAS,YAAY,EAAE,WAAW,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,mBAAmB;YACrB,IAAI;gBACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,uCAAuC,EAAE,aAAa;gBACxF,eAAe,SAAS,IAAI;gBAC5B,aAAa;YACjB,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,SAAS;gBACT,aAAa;YACjB;QACJ;QAEA;IACJ,GAAG;QAAC;KAAY;IAEhB,IAAI,WAAW,qBAAO,8OAAC;QAAI,WAAU;QAAc,aAAU;kBAAS;;;;;;IACtE,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;QAA2B,aAAU;kBAAa;;;;;;IACnF,IAAI,CAAC,aAAa,OAAO;IAEzB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAAsB,YAAY,IAAI;;;;;;kCACpD,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK,YAAY,IAAI;wBAAE,KAAK,CAAC,QAAQ,EAAE,YAAY,IAAI,EAAE;wBAAE,OAAO;wBAAI,QAAQ;;;;;;;;;;;;0BAGzF,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAG,WAAU;wBAAuB,MAAK;kCACrC,YAAY,eAAe,CAAC,GAAG,CAAC,CAAA,qBAC7B,8OAAC;gCAAc,WAAU;0CACrB,cAAA,8OAAC,4HAAA,CAAA,UAAI;oCAAC,MAAM,CAAC,SAAS,EAAE,MAAM;oCAAE,WAAU;8CACrC;;;;;;+BAFA;;;;;;;;;;;;;;;;0BASrB,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC,oIAAA,CAAA,UAAe;wBAAC,MAAM,YAAY,UAAU;;;;;;;;;;;;;;;;;;AAI7D"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}